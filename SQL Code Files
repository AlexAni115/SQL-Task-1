Lesson 1.

SELECT queries 101             

1.SELECT title FROM movies
2.SELECT director FROM movies
3.SELECT title,director FROM movies
4,SELECT title,year FROM movies
5.SELECT * FROM movies





Lesson 2.Queries with constraints (Pt. 1)      
       
1.SELECT * FROM movies WHERE id = 6;
2.SELECT title FROM movies where year  between 2000 AND 2010;
3.SELECT title FROM movies where year  between 2000 AND 2010;
4.SELECT * FROM movies WHERE year LIMIT 5;


Lesson 3.Queries with constraints (Pt. 2)

1.SELECT title FROM movies WHERE title LIKE "Toy Story%";
2.SELECT title FROM movies where director like 'John Lasseter';
3.SELECT title,director FROM movies where director not like 'John Lasseter';
4.SELECT title FROM movies where title like 'WALL%';


Lesson 4.Filtering and sorting Query results             
1.SELECT DISTINCT director from Movies order by director
2.SELECT distinct title FROM movies order by year desc limit 4;
3.SELECT distinct title FROM movies order by title  limit 5;
4.SELECT distinct title FROM movies order by title  limit 5 offset 5;


Lesson 5.Simple SELECT Queries 
1.SELECT city,population FROM  north_american_cities where country='Canada'
2.SELECT city FROM  north_american_cities where country ='United States' order by latitude desc
3.SELECT *FROM North_american_cities WHERE Longitude < -87.69 ORDER BY Longitude ASC;
4.SELECT city FROM north_american_cities where country='Mexico' order by population desc limit 2;
5.SELECT city FROM north_american_cities where country='United States' order by population desc limit 2 offset 2;







Lesson 6.Multi-table queries with JOINs 
1.SELECT title,international_sales,domestic_sales FROM movies join boxoffice on id=Movie_id ;
2.SELECT title,International_sales, Domestic_sales FROM movies join boxoffice on id=Movie_id where international_sales > domestic_sales   ;
3.SELECT title FROM movies join boxoffice on id=Movie_id order by Rating desc  ;


Lesson 7.OUTER JOINs 
1.SELECT distinct Building FROM employees where years_employed is not null;
2.SELECT building_name,capacity FROM buildings
3.SELECT  DISTINCT Building_name, Role  FROM buildings left join employees  ON Building=Building_name






Lesson 8.A short note on NULLs 
1.SELECT Name,Role FROM employees where building is null;
2.SELECT * FROM Buildings LEFT JOIN Employees ON Building_name=Building
WHERE Building IS NULL;


Lesson 9.Queries with expressions ;
1.SELECT Title, (Domestic_sales + International_sales)/1000000 AS Total_Sales_Millions
FROM Movies LEFT JOIN Boxoffice ON Id=Movie_Id;
2.SELECT Title, Rating*10 as Percent FROM Movies LEFT JOIN Boxoffice ON Id=Movie_Id;
3.SELECT Title, Year FROM Movies LEFT JOIN Boxoffice ON Id=Movie_Id
WHERE Year % 2 = 0;


Lesson 10.Queries with aggregates (Pt. 1) 
1.SELECT MAX(Years_employed)FROM Employees
2.SELECT Role, AVG(Years_Employed) FROM Employees GROUP BY Role;
3.SELECT Building, SUM(Years_Employed)  FROM Employees GROUP BY Building;


Lesson 11.Queries with aggregates (Pt. 2) 
1.SELECT Role, COUNT(*) AS Number_of_Artists FROM Employees WHERE Role = "Artist";
2.SELECT Role, COUNT(*) FROM Employees GROUP BY Role;
3.SELECT Role, SUM(Years_Employed) FROM Employees GROUP BY Role
having Role = "Engineer";



Lesson 12:Order of execution of a Query 
1.SELECT *, COUNT(Title)FROM Movies GROUP BY Director;
2.SELECT Director, sum(Domestic_sales + International_Sales) as Total_Sales FROM Movies LEFT JOIN Boxoffice ON Id = Movie_ID
GROUP BY Director;


Lesson 13:Inserting rows 

1.INSERT INTO Movies(id,title,director,year,length_minutes) VALUES (4, 'Toy Story 4', 'John Lasseter', 2017, 123);
2.INSERT INTO Boxoffice VALUES (4, 8.7, 340000000, 270000000);


Lesson 14:Updating rows 

1.UPDATE Movies SET Director = "John Lasseter" WHERE Id = 2;
2.UPDATE Movies SET Year = "1999" WHERE Id = 3;
3.UPDATE Movies SET Title = "Toy Story 3", Director = "Lee Unkrich"
WHERE Id = 11;


Lesson 15: Deleting rows 
1.DELETE FROM Movies WHERE Year < 2005;
2.DELETE FROM Movies WHERE director='Andrew Stanton';


Lesson 16:Creating tables 
1.CREATE TABLE Database (
	Name TEXT,
	Version FLOAT,
	Download_Count INTEGER);



Lesson 17:Altering tables 

1.ALTER TABLE Movies  ADD COLUMN Aspect_ratio FLOAT DEFAULT 3;
2.ALTER TABLE Movies ADD COLUMN Language TEXT DEFAULT "English";


Lesson 18:Dropping tables 
1.drop table Movies
2.drop table boxoffice

